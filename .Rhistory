library(tidyverse) # lesson 3 onwards
install.packages("tidyverse")
## file structure
if (!file.exists("data"))
dir.create("data")
if (!file.exists("data / Ecoli_metadata.csv")) {
download.file(
"https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv",
"data / Ecoli_metadata.csv")
}
if (!file.exists("data / species.csv")){
download.file("https: /  / ndownloader.figshare.com / files / 3299483",
"data / species.csv")
}
if (!file.exists("data / plots.csv")) {
download.file("https: /  / ndownloader.figshare.com / files / 3299474",
"data / plots.csv")
}
if (!file.exists("data / portal_data_joined.csv")) {
download.file("https: /  / ndownloader.figshare.com / files / 2292169",
"data / portal_data_joined.csv")
}
if (!file.exists("data / portal_mammals.sqlite")) {
download.file("https: /  / ndownloader.figshare.com / files / 2292171",
"data / portal_mammals.sqlite")
}
## file structure
if (!file.exists("data"))
dir.create("data")
if (!file.exists("data / Ecoli_metadata.csv")) {
download.file("https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv","data / Ecoli_metadata.csv")
}
if (!file.exists("data/Ecoli_metadata.csv")) {
download.file("https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv","data / Ecoli_metadata.csv")
}
## file structure
if (!file.exists("data"))
dir.create("data")
if (!file.exists("data/Ecoli_metadata.csv")) {
download.file("https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv","data / Ecoli_metadata.csv")
}
source("setup.R")
metadata<- read_csv(file = " https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv", col_types = cols())
source("setup.R")
surveys_complete <- read_csv("data/Ecoli_metadata.csv")
```{r, eval=FALSE, purl=FALSE}
ggplot(data = surveys_complete)
ggplot(data = surveys_complete, aes(x = weight, y = hindfoot_length))
ggplot(data = metadata, aes(x = sample, y = generation))+
geom_point()
ggplot(data = metadata, aes(x = sample, y = generation))
ggplot(data = metadata)
metadata<- read_csv("data/Ecoli_metadata.csv")
ggplot(data =metadata)
ggplot(data =metadata, aes(x = sample, y = generation))
ggplot(data =metadata, aes(x = sample, y = generation))+
geom_point()
# Assign plot to a variable
metadata_plot <- ggplot(data =metadata, aes(x = sample, y = generation))
# Draw the plot
metadata_plot +
geom_point()
# Create a ggplot and draw it
metadata_plot <- ggplot(data =metadata, aes(x = sample, y = generation))
metadata_plot  +
geom_point()
# This is the correct syntax for adding layers
metadata_plot  +
geom_point()
# This will not add the new layer and will return an error message
metadata_plot
+ geom_point()
### Challenge with hexbin
##
## To use the hexagonal binning with **`ggplot2`**, first install the `hexbin`
## package from CRAN:
install.packages("hexbin")
library(hexbin)
## Then use the `geom_hex()` function:
metadata_plot +
geom_hex()
## What are the relative strengths and weaknesses of a hexagonal bin
## plot compared to a scatter plot?
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1)
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1, color = "blue")
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1, aes(color = species_id))
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1, aes(color = strain))
ggplot(data =metadata, aes(x = sample, y = generation))+
geom_boxplot()
ggplot(data =metadata, aes(x = sample, y = generation))+
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
## Challenge with boxplots:
##  Start with the boxplot we created:
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
##  1. Replace the box plot with a violin plot; see `geom_violin()`.
##  2. Represent weight on the log10 scale; see `scale_y_log10()`.
##  3. Create boxplot for `hindfoot_length` overlaid on a jitter layer.
##  4. Add color to the data points on your boxplot according to the
##  plot from which the sample was taken (`plot_id`).
##  *Hint:* Check the class for `plot_id`. Consider changing the class
##  of `plot_id` from integer to factor. Why does this change how R
##  makes the graph?
source("setup.R")
```{r, eval=FALSE, purl=FALSE}
View(metadata)
```{r time-series-by-strain, purl=FALSE}
ggplot(data =sample_per_generation, aes(x =sample, y = generation, group = strain)) +
geom_line()
sample_per_generation <- metadata%>%
group_by(sample,generation) %>%
tally()
sample_per_generation <- metadata%>%
group_by(sample,generation) %>%
tally()
sample_per_generation <- metadata%>%
group_by(sample,generation) %>%
tally()
sample_per_generation <- metadata%>%
group_by(sample,generation) %>%
tally()
sample_per_generation <- metadata%>%
group_by(sample,generation) %>%
tally()
ggplot(data =sample_per_generation, aes(x =sample, y = generation)) +
geom_line()
ggplot(data =sample_per_generation, aes(x =sample, y = generation, group = strain)) +
geom_line()
sample_per_generation
sample_per_generation <- metadata%>%
group_by(strain,generation) %>%
tally()
sample_per_generation <- metadata%>%
group_by(strain,generation) %>%
tally()
source("setup.R")
### Data Visualization with ggplot2
library(tidyverse)
metadata<- read_csv("data/Ecoli_metadata.csv")
ggplot(data =metadata, aes(x = sample, y = generation))+
geom_point()
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point()
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1)
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1, color = "blue")
ggplot(data =metadata, aes(x = sample, y = generation)) +
geom_point(alpha = 0.1, aes(color = strain))
ggplot(data =metadata, aes(x = sample, y = generation))+
geom_boxplot()
ggplot(data =metadata, aes(x = sample, y = generation))+
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
sample_per_generation
ggplot(data =sample_per_generation, aes(x =strain, y = generation)) +
geom_line()
ggplot(data =sample_per_generation, aes(x =strain, y = generation, group = sample)) +
geom_line()
ggplot(data =metadata, aes(x =strain, y = generation, group = sample)) +
geom_line()
ggplot(data =sample_per_generation, aes(x =generation y = strain)) +
ggplot(data =sample_per_generation, aes(x =generation, y = strain)) +
geom_line()
